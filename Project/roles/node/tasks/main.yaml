- name: Create prometheus system user and group
  ansible.builtin.user:
    name: "{{ node_exporter_user }}"
    system: true
    create_home: "{{ node_exporter_create_home | default(false) }}"
    shell: "{{ node_exporter_shell | default('/bin/false') }}"
    state: present 

- name: Download node_exporter
  ansible.builtin.get_url:
    url: "{{ node_exporter_url }}"
    dest: "{{ node_exporter_tmp_file }}"

- name: Extract prometheus
  ansible.builtin.unarchive:
    src: "{{ node_exporter_tmp_file }}"
    dest: "{{ node_exporter_tmp_dir }}"
    remote_src: yes


- name: Copy binary files
  ansible.builtin.copy:
    src: "{{ node_exporter_tmp_dir }}"
    dest: "{{ node_exporter_bin_path }}/usr/local/bin/node_exporter"
    mode: '0755'
    remote_src: yes


- name: Create Prometheus systemd service unit file
  ansible.builtin.copy:
    dest: "{{ node_exporter_service_path }}"
    content: |
      [Unit]
      Description=Node Exporter
      Wants=network-online.target
      After=network-online.target

      StartLimitIntervalSec=500
      StartLimitBurst=5

      [Service]
      User=node_exporter
      Group=node_exporter
      Type=simple
      Restart=on-failure
      RestartSec=5s
      ExecStart=/usr/local/bin/node_exporter \
        --collector.logind

      [Install]
      WantedBy=multi-user.target
    owner: root
    group: root
    mode: '0644'
    
- name: Start service node_exporter
  ansible.builtin.service:
    name: "{{ node_exporter_service_name }}"
    state: started
    enabled: yes


- name: Add Node Exporter as a target in Prometheus
  ansible.builtin.blockinfile:
    path: "{{ prometheus_config_path }}"
    block: |
        - job_name: 'node_export'
          static_configs:
            - targets: ["localhost:9100"]
    insertafter: '^scrape_configs:'
    marker: "# {mark} ANSIBLE MANAGED BLOCK FOR NODE_EXPORTER"
    owner: prometheus
    group: prometheus
    mode: '0644'

- name: Validate Prometheus configuration
  ansible.builtin.command:
    cmd: promtool check config /etc/prometheus/prometheus.yml
  register: validate_result
  failed_when: validate_result.rc != 0
  changed_when: false


- name: Reload Prometheus configuration
  ansible.builtin.uri:
    url: "{{ prometheus_reload_url }}"
    method: POST
    status_code: 200
  register: reload_result


      




